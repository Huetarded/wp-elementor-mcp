name: Update NPM README

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for README update'
        required: true
        default: 'Documentation improvements'

permissions:
  contents: read
  id-token: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Check package exists on npm
      id: package-check
      run: |
        PACKAGE_EXISTS=$(npm view wp-elementor-mcp name 2>/dev/null || echo "not-found")
        if [ "$PACKAGE_EXISTS" = "not-found" ]; then
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Package not found on npm"
        else
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Package found on npm"
        fi

    - name: Update README on npm (using npm deprecate workaround)
      if: steps.package-check.outputs.exists == 'true'
      run: |
        # Get current version
        CURRENT_VERSION=$(npm view wp-elementor-mcp version)
        echo "Current NPM version: $CURRENT_VERSION"
        
        # Create a temporary package with updated README
        cp package.json package.json.backup
        cp README.md README.md.backup
        
        # Create a minor patch version for README update
        NEW_VERSION="${CURRENT_VERSION}.1"
        echo "Creating README update version: $NEW_VERSION"
        
        # Update package.json temporarily
        npm version $NEW_VERSION --no-git-tag-version
        
        # Publish with README update
        npm publish --access public
        
        # Restore original files
        mv package.json.backup package.json
        mv README.md.backup README.md
        
        echo "README updated on npm with version $NEW_VERSION"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Notify completion
      run: |
        echo "âœ… README update process completed"
        echo "Reason: ${{ github.event.inputs.reason }}" 